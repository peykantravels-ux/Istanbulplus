openapi: 3.0.3
info:
  title: Istanbul Plus E-commerce API
  version: 1.0.0
  description: "\n    API documentation for Istanbul Plus E-commerce platform with\
    \ advanced authentication system.\n    \n    ## Features\n    - JWT-based authentication\n\
    \    - Two-factor authentication (OTP via SMS/Email)\n    - Email and phone verification\n\
    \    - Password reset functionality\n    - Session management\n    - Rate limiting\
    \ and security features\n    - Comprehensive user profile management\n    \n \
    \   ## Authentication\n    Most endpoints require authentication. Include the\
    \ JWT token in the Authorization header:\n    ```\n    Authorization: Bearer <your_jwt_token>\n\
    \    ```\n    \n    ## Rate Limiting\n    The API implements rate limiting:\n\
    \    - OTP requests: 5 per hour\n    - Login attempts: 10 per hour\n    - Password\
    \ reset: 3 per hour\n    - General API: 1000 per hour per user\n    "
  contact:
    name: Istanbul Plus Support
    email: support@istanbulplus.ir
    url: https://istanbulplus.ir/support
  license:
    name: Proprietary
    url: https://istanbulplus.ir/license
paths:
  /api/auth/change-password/:
    post:
      operationId: auth_change_password_create
      description: API view for changing user password
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          description: No response body
  /api/auth/delete-account/:
    delete:
      operationId: auth_delete_account_destroy
      description: API view for deleting user account
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '204':
          description: No response body
  /api/auth/download-data/:
    get:
      operationId: auth_download_data_retrieve
      description: API view for downloading personal data (GDPR compliance)
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          description: No response body
  /api/auth/login/:
    post:
      operationId: auth_login_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/auth/logout/:
    post:
      operationId: auth_logout_create
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          description: No response body
  /api/auth/logout-all/:
    post:
      operationId: auth_logout_all_create
      description: Logout from all devices by deactivating all sessions
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          description: No response body
  /api/auth/password-reset/confirm/:
    post:
      operationId: auth_password_reset_confirm_create
      description: API view for confirming password reset with new password
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /api/auth/password-reset/request/:
    post:
      operationId: auth_password_reset_request_create
      description: API view for requesting password reset OTP
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequest'
          description: ''
  /api/auth/password-reset/verify/:
    post:
      operationId: auth_password_reset_verify_create
      description: API view for verifying password reset OTP
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetVerifyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetVerifyRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetVerify'
          description: ''
  /api/auth/profile/:
    get:
      operationId: auth_profile_retrieve
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    put:
      operationId: auth_profile_update
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    patch:
      operationId: auth_profile_partial_update
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /api/auth/register/:
    post:
      operationId: auth_register_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /api/auth/resend-verification/:
    post:
      operationId: auth_resend_verification_create
      description: API view for resending verification (email or phone)
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendVerificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendVerificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendVerificationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendVerification'
          description: ''
  /api/auth/reset-failed-attempts/:
    post:
      operationId: auth_reset_failed_attempts_create
      description: API view for resetting failed login attempts
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          description: No response body
  /api/auth/send-email-verification/:
    post:
      operationId: auth_send_email_verification_create
      description: API view for sending email verification link
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailVerificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailVerificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailVerificationRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailVerification'
          description: ''
  /api/auth/send-otp/:
    post:
      operationId: auth_send_otp_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendOtpRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendOtpRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendOtpRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendOtp'
          description: ''
  /api/auth/send-phone-verification/:
    post:
      operationId: auth_send_phone_verification_create
      description: API view for sending phone verification OTP
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendPhoneVerificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendPhoneVerificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendPhoneVerificationRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendPhoneVerification'
          description: ''
  /api/auth/sessions/:
    get:
      operationId: auth_sessions_retrieve
      description: Get list of user's active sessions
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          description: No response body
  /api/auth/sessions/{session_id}/:
    delete:
      operationId: auth_sessions_destroy
      description: Terminate a specific session
      parameters:
      - in: path
        name: session_id
        schema:
          type: integer
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '204':
          description: No response body
  /api/auth/two-factor/:
    post:
      operationId: auth_two_factor_create
      description: API view for toggling two-factor authentication
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          description: No response body
  /api/auth/verify-email/:
    post:
      operationId: auth_verify_email_create
      description: API view for verifying email with token
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyEmail'
          description: ''
  /api/auth/verify-otp/:
    post:
      operationId: auth_verify_otp_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOtpRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyOtpRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyOtpRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyOtp'
          description: ''
  /api/auth/verify-phone/:
    post:
      operationId: auth_verify_phone_create
      description: API view for verifying phone with OTP
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyPhoneRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyPhoneRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyPhoneRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPhone'
          description: ''
  /api/cart/:
    get:
      operationId: cart_retrieve
      tags:
      - cart
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
  /api/cart/count/:
    get:
      operationId: cart_count_retrieve
      tags:
      - cart
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - {}
      responses:
        '200':
          description: No response body
  /api/cart/items/:
    post:
      operationId: cart_items_create
      tags:
      - cart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartItemRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
  /api/cart/items/{id}/delete/:
    delete:
      operationId: cart_items_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - cart
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '204':
          description: No response body
  /api/cart/items/{id}/update/:
    put:
      operationId: cart_items_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - cart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartItemRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
    patch:
      operationId: cart_items_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - cart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCartItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCartItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCartItemRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
  /api/orders/:
    get:
      operationId: orders_list
      tags:
      - orders
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: orders_create
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/orders/{id}/:
    get:
      operationId: orders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: یک مقداد عدد یکتا که این order را شناسایی میکند.
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: orders_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: یک مقداد عدد یکتا که این order را شناسایی میکند.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: orders_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: یک مقداد عدد یکتا که این order را شناسایی میکند.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: orders_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: یک مقداد عدد یکتا که این order را شناسایی میکند.
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '204':
          description: No response body
  /api/payments/:
    get:
      operationId: payments_list
      tags:
      - payments
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
          description: ''
    post:
      operationId: payments_create
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /api/payments/{id}/:
    get:
      operationId: payments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: یک مقداد عدد یکتا که این payment را شناسایی میکند.
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    put:
      operationId: payments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: یک مقداد عدد یکتا که این payment را شناسایی میکند.
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    patch:
      operationId: payments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: یک مقداد عدد یکتا که این payment را شناسایی میکند.
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPaymentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPaymentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPaymentRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    delete:
      operationId: payments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: یک مقداد عدد یکتا که این payment را شناسایی میکند.
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '204':
          description: No response body
  /api/products/:
    get:
      operationId: products_list
      tags:
      - products
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
  /api/products/{id}/:
    get:
      operationId: products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/categories/:
    get:
      operationId: products_categories_list
      tags:
      - products
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
  /api/products/categories/{id}/:
    get:
      operationId: products_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/products/search/:
    get:
      operationId: products_search_list
      tags:
      - products
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
        required: true
      security:
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/blacklist/:
    post:
      operationId: token_blacklist_create
      description: |-
        Takes a token and blacklists it. Must be used with the
        `rest_framework_simplejwt.token_blacklist` app installed.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenBlacklistRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenBlacklistRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenBlacklistRequest'
        required: true
      security:
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          description: No response body
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      security:
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/token/verify/:
    post:
      operationId: token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
        required: true
      security:
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          description: No response body
  /api/users/change-password/:
    post:
      operationId: users_change_password_create
      description: API view for changing user password
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          description: No response body
  /api/users/delete-account/:
    delete:
      operationId: users_delete_account_destroy
      description: API view for deleting user account
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '204':
          description: No response body
  /api/users/download-data/:
    get:
      operationId: users_download_data_retrieve
      description: API view for downloading personal data (GDPR compliance)
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          description: No response body
  /api/users/login/:
    post:
      operationId: users_login_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/users/logout/:
    post:
      operationId: users_logout_create
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          description: No response body
  /api/users/logout-all/:
    post:
      operationId: users_logout_all_create
      description: Logout from all devices by deactivating all sessions
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          description: No response body
  /api/users/password-reset/confirm/:
    post:
      operationId: users_password_reset_confirm_create
      description: API view for confirming password reset with new password
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /api/users/password-reset/request/:
    post:
      operationId: users_password_reset_request_create
      description: API view for requesting password reset OTP
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequest'
          description: ''
  /api/users/password-reset/verify/:
    post:
      operationId: users_password_reset_verify_create
      description: API view for verifying password reset OTP
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetVerifyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetVerifyRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetVerify'
          description: ''
  /api/users/profile/:
    get:
      operationId: users_profile_retrieve
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    put:
      operationId: users_profile_update
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    patch:
      operationId: users_profile_partial_update
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /api/users/register/:
    post:
      operationId: users_register_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /api/users/resend-verification/:
    post:
      operationId: users_resend_verification_create
      description: API view for resending verification (email or phone)
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendVerificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendVerificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendVerificationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendVerification'
          description: ''
  /api/users/reset-failed-attempts/:
    post:
      operationId: users_reset_failed_attempts_create
      description: API view for resetting failed login attempts
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          description: No response body
  /api/users/send-email-verification/:
    post:
      operationId: users_send_email_verification_create
      description: API view for sending email verification link
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailVerificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailVerificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailVerificationRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailVerification'
          description: ''
  /api/users/send-otp/:
    post:
      operationId: users_send_otp_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendOtpRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendOtpRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendOtpRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendOtp'
          description: ''
  /api/users/send-phone-verification/:
    post:
      operationId: users_send_phone_verification_create
      description: API view for sending phone verification OTP
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendPhoneVerificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendPhoneVerificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendPhoneVerificationRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendPhoneVerification'
          description: ''
  /api/users/sessions/:
    get:
      operationId: users_sessions_retrieve
      description: Get list of user's active sessions
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          description: No response body
  /api/users/sessions/{session_id}/:
    delete:
      operationId: users_sessions_destroy
      description: Terminate a specific session
      parameters:
      - in: path
        name: session_id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '204':
          description: No response body
  /api/users/two-factor/:
    post:
      operationId: users_two_factor_create
      description: API view for toggling two-factor authentication
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          description: No response body
  /api/users/verify-email/:
    post:
      operationId: users_verify_email_create
      description: API view for verifying email with token
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyEmail'
          description: ''
  /api/users/verify-otp/:
    post:
      operationId: users_verify_otp_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOtpRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyOtpRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyOtpRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyOtp'
          description: ''
  /api/users/verify-phone/:
    post:
      operationId: users_verify_phone_create
      description: API view for verifying phone with OTP
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyPhoneRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyPhoneRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyPhoneRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - type: http
        scheme: bearer
        bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPhone'
          description: ''
components:
  schemas:
    Cart:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          format: uuid
          nullable: true
        session_key:
          type: string
          nullable: true
          maxLength: 40
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
          readOnly: true
      required:
      - id
      - items
    CartItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - id
      - product
    CartItemRequest:
      type: object
      properties:
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
        parent:
          type: integer
          nullable: true
        children:
          type: string
          readOnly: true
      required:
      - children
      - id
      - name
      - slug
    CategoryRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        slug:
          type: string
          minLength: 1
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
        parent:
          type: integer
          nullable: true
      required:
      - name
      - slug
    Login:
      type: object
      properties:
        username:
          type: string
      required:
      - username
    LoginRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
        otp_code:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - username
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          format: uuid
        status:
          enum:
          - pending
          - paid
          - shipped
          - completed
          - cancelled
          type: string
          description: |-
            * `pending` - در انتظار پرداخت
            * `paid` - پرداخت شده
            * `shipped` - ارسال شده
            * `completed` - تکمیل شده
            * `cancelled` - لغو شده
          x-spec-enum-id: 0450d22e058ec1b6
        billing_name:
          type: string
          maxLength: 100
        billing_phone:
          type: string
          maxLength: 15
        billing_address:
          type: string
        billing_city:
          type: string
          maxLength: 50
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - billing_address
      - billing_city
      - billing_name
      - billing_phone
      - created_at
      - id
      - items
      - user
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        price:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        product_file:
          type: integer
          nullable: true
      required:
      - id
      - price
      - product
    OrderItemRequest:
      type: object
      properties:
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        price:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        product_file:
          type: integer
          nullable: true
      required:
      - price
    OrderRequest:
      type: object
      properties:
        user:
          type: string
          format: uuid
        status:
          enum:
          - pending
          - paid
          - shipped
          - completed
          - cancelled
          type: string
          description: |-
            * `pending` - در انتظار پرداخت
            * `paid` - پرداخت شده
            * `shipped` - ارسال شده
            * `completed` - تکمیل شده
            * `cancelled` - لغو شده
          x-spec-enum-id: 0450d22e058ec1b6
        billing_name:
          type: string
          minLength: 1
          maxLength: 100
        billing_phone:
          type: string
          minLength: 1
          maxLength: 15
        billing_address:
          type: string
          minLength: 1
        billing_city:
          type: string
          minLength: 1
          maxLength: 50
      required:
      - billing_address
      - billing_city
      - billing_name
      - billing_phone
      - user
    PasswordResetConfirm:
      type: object
      description: Serializer for setting new password after OTP verification
      properties:
        contact_info:
          type: string
        otp_code:
          type: string
          maxLength: 6
          minLength: 6
      required:
      - contact_info
      - otp_code
    PasswordResetConfirmRequest:
      type: object
      description: Serializer for setting new password after OTP verification
      properties:
        contact_info:
          type: string
          minLength: 1
        otp_code:
          type: string
          minLength: 6
          maxLength: 6
        new_password:
          type: string
          writeOnly: true
          minLength: 1
          description: New password
        confirm_password:
          type: string
          writeOnly: true
          minLength: 1
          description: Confirm new password
      required:
      - confirm_password
      - contact_info
      - new_password
      - otp_code
    PasswordResetRequest:
      type: object
      description: Serializer for password reset request
      properties:
        contact_info:
          type: string
          description: Email address or phone number
        delivery_method:
          enum:
          - email
          - sms
          type: string
          x-spec-enum-id: a718e613965537ee
          default: email
          description: |-
            Method to receive reset code

            * `email` - email
            * `sms` - sms
      required:
      - contact_info
    PasswordResetRequestRequest:
      type: object
      description: Serializer for password reset request
      properties:
        contact_info:
          type: string
          minLength: 1
          description: Email address or phone number
        delivery_method:
          enum:
          - email
          - sms
          type: string
          x-spec-enum-id: a718e613965537ee
          default: email
          description: |-
            Method to receive reset code

            * `email` - email
            * `sms` - sms
      required:
      - contact_info
    PasswordResetVerify:
      type: object
      description: Serializer for password reset OTP verification
      properties:
        contact_info:
          type: string
        otp_code:
          type: string
          maxLength: 6
          minLength: 6
      required:
      - contact_info
      - otp_code
    PasswordResetVerifyRequest:
      type: object
      description: Serializer for password reset OTP verification
      properties:
        contact_info:
          type: string
          minLength: 1
        otp_code:
          type: string
          minLength: 6
          maxLength: 6
      required:
      - contact_info
      - otp_code
    PatchedCartItemRequest:
      type: object
      properties:
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
    PatchedOrderRequest:
      type: object
      properties:
        user:
          type: string
          format: uuid
        status:
          enum:
          - pending
          - paid
          - shipped
          - completed
          - cancelled
          type: string
          description: |-
            * `pending` - در انتظار پرداخت
            * `paid` - پرداخت شده
            * `shipped` - ارسال شده
            * `completed` - تکمیل شده
            * `cancelled` - لغو شده
          x-spec-enum-id: 0450d22e058ec1b6
        billing_name:
          type: string
          minLength: 1
          maxLength: 100
        billing_phone:
          type: string
          minLength: 1
          maxLength: 15
        billing_address:
          type: string
          minLength: 1
        billing_city:
          type: string
          minLength: 1
          maxLength: 50
    PatchedPaymentRequest:
      type: object
      properties:
        order:
          type: integer
        amount:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        status:
          enum:
          - initiated
          - success
          - failed
          type: string
          description: |-
            * `initiated` - در انتظار پرداخت
            * `success` - موفق
            * `failed` - ناموفق
          x-spec-enum-id: 7fe87acac05e30e1
        tracking_code:
          type: string
          nullable: true
          maxLength: 100
        raw_response:
          type: string
          nullable: true
    PatchedUserProfileRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          title: نام کاربری
          description: الزامی. 150 کاراکتر یا کمتر. فقط شامل حروف، اعداد، و علامات
            @/./+/-/_
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        phone:
          type: string
          description: E.164 format, e.g. +989123456789
          maxLength: 15
        first_name:
          type: string
          title: نام
          maxLength: 150
        last_name:
          type: string
          title: نام خانوادگی
          maxLength: 150
        avatar:
          type: string
          format: binary
          writeOnly: true
          nullable: true
        birth_date:
          type: string
          format: date
          nullable: true
        two_factor_enabled:
          type: boolean
        email_notifications:
          type: boolean
        sms_notifications:
          type: boolean
    Payment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
        amount:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        status:
          enum:
          - initiated
          - success
          - failed
          type: string
          description: |-
            * `initiated` - در انتظار پرداخت
            * `success` - موفق
            * `failed` - ناموفق
          x-spec-enum-id: 7fe87acac05e30e1
        tracking_code:
          type: string
          nullable: true
          maxLength: 100
        raw_response:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - created_at
      - id
      - order
    PaymentRequest:
      type: object
      properties:
        order:
          type: integer
        amount:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        status:
          enum:
          - initiated
          - success
          - failed
          type: string
          description: |-
            * `initiated` - در انتظار پرداخت
            * `success` - موفق
            * `failed` - ناموفق
          x-spec-enum-id: 7fe87acac05e30e1
        tracking_code:
          type: string
          nullable: true
          maxLength: 100
        raw_response:
          type: string
          nullable: true
      required:
      - amount
      - order
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
        price:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        stock:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        type:
          enum:
          - physical
          - digital
          type: string
          description: |-
            * `physical` - Physical
            * `digital` - Digital
          x-spec-enum-id: 8c409bafb2d5ba21
        image:
          type: string
          format: uri
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
          readOnly: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - categories
      - created_at
      - description
      - id
      - images
      - name
      - price
      - slug
    ProductImage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
        alt_text:
          type: string
          maxLength: 100
      required:
      - id
      - image
    ProductImageRequest:
      type: object
      properties:
        image:
          type: string
          format: binary
        alt_text:
          type: string
          maxLength: 100
      required:
      - image
    ProductRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        slug:
          type: string
          minLength: 1
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          minLength: 1
        price:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        stock:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        type:
          enum:
          - physical
          - digital
          type: string
          description: |-
            * `physical` - Physical
            * `digital` - Digital
          x-spec-enum-id: 8c409bafb2d5ba21
        image:
          type: string
          format: binary
      required:
      - description
      - name
      - price
      - slug
    Register:
      type: object
      properties:
        username:
          type: string
          title: نام کاربری
          description: الزامی. 150 کاراکتر یا کمتر. فقط شامل حروف، اعداد، و علامات
            @/./+/-/_
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          description: E.164 format, e.g. +989123456789
          maxLength: 15
        send_email_verification:
          type: boolean
          default: true
          description: Send email verification after registration
      required:
      - email
      - username
    RegisterRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          title: نام کاربری
          description: الزامی. 150 کاراکتر یا کمتر. فقط شامل حروف، اعداد، و علامات
            @/./+/-/_
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        phone:
          type: string
          description: E.164 format, e.g. +989123456789
          maxLength: 15
        password:
          type: string
          writeOnly: true
          minLength: 1
        password_confirm:
          type: string
          writeOnly: true
          minLength: 1
        phone_otp_code:
          type: string
          writeOnly: true
          minLength: 1
          description: OTP code for phone verification
        send_email_verification:
          type: boolean
          default: true
          description: Send email verification after registration
      required:
      - email
      - password
      - password_confirm
      - username
    ResendVerification:
      type: object
      description: Serializer for resending verification (email or phone)
      properties:
        verification_type:
          enum:
          - email
          - phone
          type: string
          x-spec-enum-id: 204486a925de9121
          description: |-
            Type of verification to resend

            * `email` - email
            * `phone` - phone
        contact_info:
          type: string
          description: Email or phone (optional for authenticated users)
      required:
      - verification_type
    ResendVerificationRequest:
      type: object
      description: Serializer for resending verification (email or phone)
      properties:
        verification_type:
          enum:
          - email
          - phone
          type: string
          x-spec-enum-id: 204486a925de9121
          description: |-
            Type of verification to resend

            * `email` - email
            * `phone` - phone
        contact_info:
          type: string
          minLength: 1
          description: Email or phone (optional for authenticated users)
      required:
      - verification_type
    SendEmailVerification:
      type: object
      description: Serializer for sending email verification link
      properties:
        email:
          type: string
          format: email
    SendEmailVerificationRequest:
      type: object
      description: Serializer for sending email verification link
      properties:
        email:
          type: string
          format: email
          minLength: 1
    SendOtp:
      type: object
      properties:
        phone:
          type: string
          description: Phone number (for backward compatibility)
        contact_info:
          type: string
          description: Email address or phone number
        delivery_method:
          enum:
          - sms
          - email
          type: string
          x-spec-enum-id: 91e16269d37bd700
          default: sms
          description: |-
            Delivery method for OTP

            * `sms` - sms
            * `email` - email
        purpose:
          enum:
          - login
          - register
          - password_reset
          - email_verify
          - phone_verify
          type: string
          description: |-
            * `login` - login
            * `register` - register
            * `password_reset` - password_reset
            * `email_verify` - email_verify
            * `phone_verify` - phone_verify
          x-spec-enum-id: d2c82b566088d413
          default: login
    SendOtpRequest:
      type: object
      properties:
        phone:
          type: string
          minLength: 1
          description: Phone number (for backward compatibility)
        contact_info:
          type: string
          minLength: 1
          description: Email address or phone number
        delivery_method:
          enum:
          - sms
          - email
          type: string
          x-spec-enum-id: 91e16269d37bd700
          default: sms
          description: |-
            Delivery method for OTP

            * `sms` - sms
            * `email` - email
        purpose:
          enum:
          - login
          - register
          - password_reset
          - email_verify
          - phone_verify
          type: string
          description: |-
            * `login` - login
            * `register` - register
            * `password_reset` - password_reset
            * `email_verify` - email_verify
            * `phone_verify` - phone_verify
          x-spec-enum-id: d2c82b566088d413
          default: login
    SendPhoneVerification:
      type: object
      description: Serializer for sending phone verification OTP
      properties:
        phone:
          type: string
          maxLength: 15
    SendPhoneVerificationRequest:
      type: object
      description: Serializer for sending phone verification OTP
      properties:
        phone:
          type: string
          minLength: 1
          maxLength: 15
    TokenBlacklistRequest:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - refresh
    TokenObtainPair:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - refresh
    TokenObtainPairRequest:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
      required:
      - access
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - refresh
    TokenVerifyRequest:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - token
    UserProfile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          title: نام کاربری
          description: الزامی. 150 کاراکتر یا کمتر. فقط شامل حروف، اعداد، و علامات
            @/./+/-/_
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          description: E.164 format, e.g. +989123456789
          maxLength: 15
        first_name:
          type: string
          title: نام
          maxLength: 150
        last_name:
          type: string
          title: نام خانوادگی
          maxLength: 150
        avatar_url:
          type: string
          readOnly: true
        birth_date:
          type: string
          format: date
          nullable: true
        email_verified:
          type: boolean
          readOnly: true
        phone_verified:
          type: boolean
          readOnly: true
        two_factor_enabled:
          type: boolean
        email_notifications:
          type: boolean
        sms_notifications:
          type: boolean
      required:
      - avatar_url
      - email
      - email_verified
      - id
      - phone_verified
      - username
    UserProfileRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          title: نام کاربری
          description: الزامی. 150 کاراکتر یا کمتر. فقط شامل حروف، اعداد، و علامات
            @/./+/-/_
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        phone:
          type: string
          description: E.164 format, e.g. +989123456789
          maxLength: 15
        first_name:
          type: string
          title: نام
          maxLength: 150
        last_name:
          type: string
          title: نام خانوادگی
          maxLength: 150
        avatar:
          type: string
          format: binary
          writeOnly: true
          nullable: true
        birth_date:
          type: string
          format: date
          nullable: true
        two_factor_enabled:
          type: boolean
        email_notifications:
          type: boolean
        sms_notifications:
          type: boolean
      required:
      - email
      - username
    VerifyEmail:
      type: object
      description: Serializer for verifying email with token
      properties:
        token:
          type: string
          maxLength: 64
      required:
      - token
    VerifyEmailRequest:
      type: object
      description: Serializer for verifying email with token
      properties:
        token:
          type: string
          minLength: 1
          maxLength: 64
      required:
      - token
    VerifyOtp:
      type: object
      properties:
        phone:
          type: string
        code:
          type: string
        purpose:
          enum:
          - login
          - register
          type: string
          description: |-
            * `login` - login
            * `register` - register
          x-spec-enum-id: 3f81cd589f82f09d
          default: login
      required:
      - code
      - phone
    VerifyOtpRequest:
      type: object
      properties:
        phone:
          type: string
          minLength: 1
        code:
          type: string
          minLength: 1
        purpose:
          enum:
          - login
          - register
          type: string
          description: |-
            * `login` - login
            * `register` - register
          x-spec-enum-id: 3f81cd589f82f09d
          default: login
      required:
      - code
      - phone
    VerifyPhone:
      type: object
      description: Serializer for verifying phone with OTP
      properties:
        phone:
          type: string
          maxLength: 15
        otp_code:
          type: string
          maxLength: 6
          minLength: 6
      required:
      - otp_code
    VerifyPhoneRequest:
      type: object
      description: Serializer for verifying phone with OTP
      properties:
        phone:
          type: string
          minLength: 1
          maxLength: 15
        otp_code:
          type: string
          minLength: 6
          maxLength: 6
      required:
      - otp_code
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  examples:
    UserExample:
      summary: User Object Example
      value:
        id: uuid-string
        username: john_doe
        email: john@example.com
        phone: '+989123456789'
        first_name: John
        last_name: Doe
        email_verified: true
        phone_verified: true
        date_joined: '2024-01-01T00:00:00Z'
    TokensExample:
      summary: JWT Tokens Example
      value:
        access: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
        refresh: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
    ErrorExample:
      summary: Error Response Example
      value:
        error:
          code: validation_error
          message: Invalid input data
          details:
            email:
            - Enter a valid email address.
servers:
- url: https://istanbulplus.ir/api
  description: Production server
- url: https://staging.istanbulplus.ir/api
  description: Staging server
- url: http://localhost:8000/api
  description: Development server
tags:
- name: Authentication
  description: User registration, login, OTP verification, and password reset
- name: Profile
  description: User profile management and settings
- name: Security
  description: Session management, security logs, and two-factor authentication
- name: Verification
  description: Email and phone number verification
- name: Products
  description: Product catalog management
- name: Cart
  description: Shopping cart operations
- name: Orders
  description: Order management and tracking
- name: Payments
  description: Payment processing and transaction management
externalDocs:
  description: User Guide and Migration Documentation
  url: https://docs.istanbulplus.ir
