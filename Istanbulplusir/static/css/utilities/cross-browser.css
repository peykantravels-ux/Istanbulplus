/* Cross-Browser Compatibility and Fallbacks */
/* Task 15: Implement cross-browser compatibility and testing */

/* CSS Feature Detection and Fallbacks */

/* 1. CSS Custom Properties Fallbacks */
/* Fallback for browsers that don't support CSS custom properties */
.btn-modern {
  /* Fallback colors for older browsers */
  background: #667eea; /* Fallback for --color-primary */
  color: #ffffff;
  border-radius: 12px; /* Fallback for --radius-xl */
  padding: 12px 24px; /* Fallback for --space-3 --space-6 */
  transition: all 0.2s ease-in-out; /* Fallback for --transition-base */
}

/* Modern browsers with custom property support */
@supports (--css: variables) {
  .btn-modern {
    background: var(--color-primary);
    border-radius: var(--radius-xl);
    padding: var(--space-3) var(--space-6);
    transition: all var(--transition-base) var(--ease-out);
  }
}

/* 2. Backdrop Filter Fallbacks */
/* Fallback for browsers that don't support backdrop-filter */
.card {
  background: rgba(255, 255, 255, 0.9); /* Solid fallback */
  border: 1px solid rgba(255, 255, 255, 0.2);
}

/* Modern browsers with backdrop-filter support */
@supports (backdrop-filter: blur(20px)) {
  .card {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(20px);
  }
}

/* Alternative fallback using -webkit-backdrop-filter for Safari */
@supports (-webkit-backdrop-filter: blur(20px)) {
  .card {
    background: rgba(255, 255, 255, 0.1);
    -webkit-backdrop-filter: blur(20px);
    backdrop-filter: blur(20px);
  }
}

/* 3. CSS Grid Fallbacks */
/* Flexbox fallback for CSS Grid */
.product-grid {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
}

.product-grid > * {
  flex: 1 1 300px;
  min-width: 300px;
}

/* Modern browsers with CSS Grid support */
@supports (display: grid) {
  .product-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--space-6, 1.5rem);
  }
  
  .product-grid > * {
    flex: none;
    min-width: auto;
  }
}

/* 4. CSS Flexbox Gap Fallbacks */
/* Margin fallback for flexbox gap */
.btn-group {
  display: flex;
}

.btn-group > * {
  margin-right: 0.5rem;
}

.btn-group > *:last-child {
  margin-right: 0;
}

/* Modern browsers with gap support */
@supports (gap: 1rem) {
  .btn-group {
    gap: 0.5rem;
  }
  
  .btn-group > * {
    margin-right: 0;
  }
}

/* 5. CSS Clip-path Fallbacks */
/* Border-radius fallback for clip-path */
.hero-section {
  border-radius: 0 0 50px 50px;
  overflow: hidden;
}

/* Modern browsers with clip-path support */
@supports (clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%)) {
  .hero-section {
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    border-radius: 0;
  }
}

/* 6. CSS Aspect Ratio Fallbacks */
/* Padding-bottom technique fallback */
.aspect-ratio-container {
  position: relative;
  width: 100%;
  padding-bottom: 75%; /* 4:3 aspect ratio */
}

.aspect-ratio-container > * {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* Modern browsers with aspect-ratio support */
@supports (aspect-ratio: 4/3) {
  .aspect-ratio-container {
    aspect-ratio: 4/3;
    padding-bottom: 0;
  }
  
  .aspect-ratio-container > * {
    position: static;
  }
}

/* 7. CSS Logical Properties Fallbacks */
/* Physical properties fallback */
.text-start {
  text-align: left;
}

.text-end {
  text-align: right;
}

.margin-start {
  margin-left: 1rem;
}

.margin-end {
  margin-right: 1rem;
}

.padding-start {
  padding-left: 1rem;
}

.padding-end {
  padding-right: 1rem;
}

/* RTL adjustments for physical properties */
[dir="rtl"] .text-start {
  text-align: right;
}

[dir="rtl"] .text-end {
  text-align: left;
}

[dir="rtl"] .margin-start {
  margin-left: 0;
  margin-right: 1rem;
}

[dir="rtl"] .margin-end {
  margin-right: 0;
  margin-left: 1rem;
}

[dir="rtl"] .padding-start {
  padding-left: 0;
  padding-right: 1rem;
}

[dir="rtl"] .padding-end {
  padding-right: 0;
  padding-left: 1rem;
}

/* Modern browsers with logical properties support */
@supports (margin-inline-start: 1rem) {
  .text-start {
    text-align: start;
  }
  
  .text-end {
    text-align: end;
  }
  
  .margin-start {
    margin-left: 0;
    margin-inline-start: 1rem;
  }
  
  .margin-end {
    margin-right: 0;
    margin-inline-end: 1rem;
  }
  
  .padding-start {
    padding-left: 0;
    padding-inline-start: 1rem;
  }
  
  .padding-end {
    padding-right: 0;
    padding-inline-end: 1rem;
  }
  
  /* Remove RTL overrides when logical properties are supported */
  [dir="rtl"] .text-start,
  [dir="rtl"] .text-end,
  [dir="rtl"] .margin-start,
  [dir="rtl"] .margin-end,
  [dir="rtl"] .padding-start,
  [dir="rtl"] .padding-end {
    all: revert;
  }
}

/* 8. CSS Transform 3D Fallbacks */
/* 2D transform fallback */
.card-3d {
  transition: transform 0.3s ease;
}

.card-3d:hover {
  transform: scale(1.05);
}

/* 3D transform for modern browsers */
@supports (transform: perspective(1000px)) {
  .card-3d {
    transform-style: preserve-3d;
    perspective: 1000px;
  }
  
  .card-3d:hover {
    transform: rotateY(5deg) rotateX(5deg) scale(1.05);
  }
}

/* 9. CSS Filter Fallbacks */
/* Opacity fallback for filter effects */
.image-blur {
  opacity: 0.8;
}

/* Modern browsers with filter support */
@supports (filter: blur(5px)) {
  .image-blur {
    opacity: 1;
    filter: blur(5px);
  }
}

/* 10. CSS Scroll Behavior Fallbacks */
/* JavaScript fallback will be handled in JS file */
html {
  scroll-behavior: auto; /* Fallback */
}

/* Modern browsers with smooth scroll support */
@supports (scroll-behavior: smooth) {
  html {
    scroll-behavior: smooth;
  }
}

/* 11. CSS Container Queries Fallbacks */
/* Media query fallback */
@media (max-width: 768px) {
  .responsive-card {
    font-size: 14px;
    padding: 12px;
  }
}

@media (min-width: 769px) {
  .responsive-card {
    font-size: 16px;
    padding: 24px;
  }
}

/* Container queries for modern browsers */
@supports (container-type: inline-size) {
  .card-container {
    container-type: inline-size;
  }
  
  @container (max-width: 400px) {
    .responsive-card {
      font-size: 14px;
      padding: 12px;
    }
  }
  
  @container (min-width: 401px) {
    .responsive-card {
      font-size: 16px;
      padding: 24px;
    }
  }
}

/* 12. CSS Subgrid Fallbacks */
/* Regular grid fallback */
.nested-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
}

/* Subgrid for modern browsers */
@supports (grid-template-columns: subgrid) {
  .nested-grid-item {
    display: grid;
    grid-template-columns: subgrid;
    grid-column: span 2;
  }
}

/* 13. CSS Color Functions Fallbacks */
/* Static color fallbacks */
.color-modern {
  background-color: #667eea; /* Fallback */
  color: #ffffff;
}

/* Modern color functions */
@supports (color: oklch(0.7 0.15 250)) {
  .color-modern {
    background-color: oklch(0.7 0.15 250);
    color: oklch(0.95 0.02 250);
  }
}

/* 14. CSS Cascade Layers Fallbacks */
/* Regular CSS without layers (fallback) */
.component {
  background: #f0f0f0;
  padding: 1rem;
}

/* Cascade layers for modern browsers */
@supports (layer: base) {
  @layer base {
    .component {
      background: var(--color-gray-100);
      padding: var(--space-4);
    }
  }
}

/* 15. Browser-Specific Fixes */

/* Internet Explorer 11 Fixes */
@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
  /* IE11 flexbox fixes */
  .flex-ie-fix {
    display: -ms-flexbox;
    display: flex;
  }
  
  .flex-ie-fix > * {
    -ms-flex: 1 1 auto;
    flex: 1 1 auto;
  }
  
  /* IE11 grid fallback */
  .grid-ie-fallback {
    display: -ms-grid;
    -ms-grid-columns: 1fr 1fr 1fr;
    -ms-grid-rows: auto;
  }
  
  .grid-ie-fallback > *:nth-child(1) {
    -ms-grid-column: 1;
  }
  
  .grid-ie-fallback > *:nth-child(2) {
    -ms-grid-column: 2;
  }
  
  .grid-ie-fallback > *:nth-child(3) {
    -ms-grid-column: 3;
  }
}

/* Safari-specific fixes */
@supports (-webkit-appearance: none) {
  /* Safari button appearance fix */
  .btn-safari-fix {
    -webkit-appearance: none;
    appearance: none;
  }
  
  /* Safari flexbox gap fix */
  .flex-safari-gap {
    margin: -0.5rem;
  }
  
  .flex-safari-gap > * {
    margin: 0.5rem;
  }
}

/* Firefox-specific fixes */
@-moz-document url-prefix() {
  /* Firefox flexbox fixes */
  .flex-firefox-fix {
    min-height: 0;
    min-width: 0;
  }
  
  /* Firefox outline fix */
  .btn-firefox-outline::-moz-focus-inner {
    border: 0;
    padding: 0;
  }
}

/* Chrome/Webkit specific fixes */
@media screen and (-webkit-min-device-pixel-ratio: 0) {
  /* Chrome scrollbar styling */
  .custom-scrollbar::-webkit-scrollbar {
    width: 8px;
  }
  
  .custom-scrollbar::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.1);
    border-radius: 4px;
  }
  
  .custom-scrollbar::-webkit-scrollbar-thumb {
    background: rgba(0, 0, 0, 0.3);
    border-radius: 4px;
  }
  
  .custom-scrollbar::-webkit-scrollbar-thumb:hover {
    background: rgba(0, 0, 0, 0.5);
  }
}

/* 16. Progressive Enhancement Classes */
/* Base styles (work everywhere) */
.progressive-card {
  background: #ffffff;
  border: 1px solid #e0e0e0;
  border-radius: 8px;
  padding: 1rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

/* Enhanced styles for modern browsers */
.progressive-card.enhanced {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 16px;
  box-shadow: 0 8px 32px rgba(31, 38, 135, 0.37);
}

/* 17. Print Styles */
@media print {
  /* Remove interactive elements */
  .btn,
  .dropdown,
  .modal,
  .tooltip {
    display: none !important;
  }
  
  /* Ensure good contrast */
  * {
    background: transparent !important;
    color: black !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }
  
  /* Page breaks */
  .card,
  .product-item {
    page-break-inside: avoid;
    break-inside: avoid;
  }
  
  /* Show URLs for links */
  a[href]:after {
    content: " (" attr(href) ")";
    font-size: 0.8em;
    color: #666;
  }
  
  /* Hide decorative images */
  .hero-bg,
  .decorative-img {
    display: none !important;
  }
}

/* 18. High Contrast Mode Support */
@media (prefers-contrast: high) {
  .card {
    border: 2px solid;
    background: Canvas;
    color: CanvasText;
  }
  
  .btn {
    border: 2px solid ButtonText;
    background: ButtonFace;
    color: ButtonText;
  }
  
  .btn:hover {
    background: Highlight;
    color: HighlightText;
  }
}

/* 19. Reduced Motion Support */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
  
  /* Keep essential animations but make them instant */
  .loading-spinner {
    animation: none;
  }
  
  .loading-spinner::after {
    content: "Loading...";
  }
}

/* 20. Forced Colors Mode (Windows High Contrast) */
@media (forced-colors: active) {
  .card {
    border: 1px solid;
    background: Canvas;
    color: CanvasText;
  }
  
  .btn {
    border: 1px solid ButtonText;
    background: ButtonFace;
    color: ButtonText;
    forced-color-adjust: none;
  }
  
  .btn:hover {
    background: Highlight;
    color: HighlightText;
  }
  
  /* Ensure icons are visible */
  .icon {
    fill: currentColor;
    stroke: currentColor;
  }
}

/* 21. Feature Detection Utilities */
/* JavaScript will add these classes based on feature detection */
.no-js .js-only {
  display: none !important;
}

.js .no-js-only {
  display: none !important;
}

.no-webp .webp-bg {
  background-image: url('fallback.jpg');
}

.webp .webp-bg {
  background-image: url('image.webp');
}

.no-avif .avif-bg {
  background-image: url('fallback.jpg');
}

.avif .avif-bg {
  background-image: url('image.avif');
}

/* 22. Polyfill Styles */
/* Styles for when polyfills are loaded */
.polyfilled .modern-feature {
  /* Adjusted styles for polyfilled features */
  opacity: 0.9; /* Slightly reduced to indicate polyfill */
}

/* 23. Graceful Degradation Examples */
/* Complex gradient with simple fallback */
.gradient-complex {
  background: #667eea; /* Simple fallback */
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); /* Standard gradient */
  background: conic-gradient(from 180deg at 50% 50%, #667eea 0deg, #764ba2 180deg, #667eea 360deg); /* Modern gradient */
}

/* Complex animation with simple fallback */
.animate-complex {
  opacity: 1; /* Fallback state */
  transform: translateY(0); /* Fallback position */
}

@supports (animation-timeline: scroll()) {
  .animate-complex {
    animation: slideInUp 1s ease-out;
    animation-timeline: scroll();
  }
}

@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* 24. Browser Bug Fixes */
/* Fix for Safari flexbox bug */
.safari-flex-fix {
  min-height: 0;
}

/* Fix for Chrome input autofill */
.chrome-autofill-fix:-webkit-autofill {
  -webkit-box-shadow: 0 0 0 30px white inset !important;
  -webkit-text-fill-color: #333 !important;
}

/* Fix for Firefox button padding */
.firefox-button-fix::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/* Fix for IE11 flexbox min-height */
.ie11-flex-fix {
  display: flex;
  flex-direction: column;
}

.ie11-flex-fix > * {
  flex-shrink: 0;
}

/* 25. Accessibility Enhancements */
/* Focus indicators that work across browsers */
.focus-visible {
  outline: 2px solid #005fcc;
  outline-offset: 2px;
}

/* High contrast focus indicators */
@media (prefers-contrast: high) {
  .focus-visible {
    outline: 3px solid;
    outline-offset: 2px;
  }
}

/* Screen reader only content */
.sr-only {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

/* Skip links */
.skip-link {
  position: absolute;
  top: -40px;
  left: 6px;
  background: #000;
  color: #fff;
  padding: 8px;
  text-decoration: none;
  border-radius: 4px;
  z-index: 10000;
}

.skip-link:focus {
  top: 6px;
}